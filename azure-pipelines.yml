# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

steps:
- task: MSIX.msix-ci-automation-task-dev.msix-packaging.MsixPackaging@1
  displayName: 'MSIX build and package'
  inputs:
    outputPath: '$(Build.ArtifactStagingDirectory)\Calculator.msix'
    solution: Calculator.sln
    buildPlatform: x86
    updateAppVersion: true
    manifestFile: Calculator.Package/Package.appxmanifest
    appVersion: 1.0.0.0
    appPackageDistributionMode: SideloadOnly
    msbuildArchitecture: x86

- task: DownloadSecureFile@1
  name: signingCert
  displayName: 'Download CA certificate'
  inputs:
    secureFile: 'selfcert.pfx'
- task: MsixSigning@1
  inputs:
    package: '$(Build.ArtifactStagingDirectory)\**\*.msix*'
    certificate: 'selfcert.pfx'
    passwordVariable: 'password'
steps:
- task: MSIX.msix-ci-automation-task-dev.app-installer-file.AppInstallerFile@1
  displayName: 'Create App Installer file'
  inputs:
    package: '$(Build.ArtifactStagingDirectory)\Calculator.msix'
    outputPath: '$(Build.ArtifactStagingDirectory)\Calculator.appinstaller'
    uri: 'https://myuwpapp-demo.azurewebsites.net/Calculator.appinstaller'
    mainItemUri: 'https://myuwpapp-demo.azurewebsites.net/MyApp.msix'
    showPromptWhenUpdating: true
    updateBlocksActivation: true